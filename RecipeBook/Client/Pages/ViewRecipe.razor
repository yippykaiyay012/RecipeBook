@page "/recipe/{Id:int}"
@inject HttpClient http
@using RecipeBook.Shared.Models
@inject NavigationManager nav

<div class="container">
    <div class="">
        <h1 class="text-center pb-5">@recipe.Title</h1>
        <button @onclick="(() => showModal = true)" class="btn btn-custom float-right">Options</button>

    </div>
    @if (recipe.Id == 0)
    {
        <RecipeBook.Client.Shared.Components.Loading />
    }
    else
    {
        <div class="row">
            <div class="col-4">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Measurement</th>
                            <th>Ingredient</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ingr in recipe.Ingredients)
                        {
                            <tr>
                                <td class="text-right">@ingr.Measurement</td>
                                <td>@ingr.Name</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="col-8">
                <h2>Description</h2>
                @recipe.Description
            </div>
        </div>




        <ul class="list-unstyled">
            @foreach (var step in recipe.Steps.OrderBy(x => x.Id))
            {
                <li class="mt-3">
                    <div class="">
                        <h3 class="d-inline-block">Step @step.StepNumber:</h3>
                        <h3 class="d-inline-block">@step.Heading</h3>
                    </div>

                    <div>@step.Content</div>
                </li>
            }
        </ul>

    }
</div>







@if (showModal)
{



    <div class="modal shadow-custom" id="exampleModal" tabindex="-1" role="dialog" style="display:block">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Options</h5>
                    <button  @onclick="(() => showModal = false)" type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p></p>
                    <button @onclick="DeleteRecipe" class="btn btn-danger float-right">Delete</button>
                    <button @onclick="EditRecipe" class="btn btn-custom">Edit</button>

                </div>

            </div>
        </div>
    </div>
}



@code {


    [Parameter]
    public int Id { get; set; }

    Recipe recipe = new Recipe();

    bool showModal = false;


    protected override async Task OnInitializedAsync()
    {
        recipe = await http.GetJsonAsync<Recipe>($"/api/recipes/{Id}");




    }


    void EditRecipe()
    {
        nav.NavigateTo($"/EditRecipe/{Id}");
    }


    async void DeleteRecipe()
    {
        await http.DeleteAsync($"/api/recipes/{Id}");

        nav.NavigateTo("/");
    }
}
